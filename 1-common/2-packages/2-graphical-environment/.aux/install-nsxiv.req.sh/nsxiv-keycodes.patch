--- a/main.c	2021-12-16 23:25:53.901619571 +0300
+++ b/main.c	2021-12-16 23:33:59.070275402 +0300
@@ -605,14 +605,14 @@
 	redraw();
 }

-static bool process_bindings(const keymap_t *keys, unsigned int len, KeySym ksym_or_button,
+static bool process_bindings(const keymap_t *keys, unsigned int len, KeyCode keycode,
                              unsigned int state, unsigned int implicit_mod)
 {
 	unsigned int i;
 	bool dirty = false;

 	for (i = 0; i < len; i++) {
-		if (keys[i].ksym_or_button == ksym_or_button &&
+		if (keys[i].keycode == keycode &&
 		    MODMASK(keys[i].mask | implicit_mod) == MODMASK(state) &&
 		    keys[i].cmd.func &&
 		    (keys[i].cmd.mode == MODE_ALL || keys[i].cmd.mode == mode))
@@ -628,10 +628,14 @@
 {
 	unsigned int sh = 0;
 	KeySym ksym, shksym;
+	KeyCode kcode;
+	char kcode_str[12];
 	char dummy, key;
 	bool dirty = false;

 	XLookupString(kev, &key, 1, &ksym, NULL);
+	kcode = kev->keycode;
+	snprintf(kcode_str, 12, "%d", kcode);

 	if (kev->state & ShiftMask) {
 		kev->state &= ~ShiftMask;
@@ -645,14 +649,14 @@
 	if (extprefix && ksym == KEYHANDLER_ABORT && MODMASK(kev->state) == 0) {
 		handle_key_handler(false);
 	} else if (extprefix) {
-		run_key_handler(XKeysymToString(ksym), kev->state & ~sh);
+		run_key_handler(kcode_str, kev->state & ~sh);
 		extprefix = false;
 	} else if (key >= '0' && key <= '9') {
 		/* number prefix for commands */
 		prefix = prefix * 10 + (int) (key - '0');
 		return;
 	} else {
-		dirty = process_bindings(keys, ARRLEN(keys), ksym, kev->state, sh);
+		dirty = process_bindings(keys, ARRLEN(keys), kcode, kev->state, 0);
 	}
 	if (dirty)
 		redraw();
--- a/nsxiv.h	2021-12-16 23:25:11.341738170 +0300
+++ b/nsxiv.h	2021-12-16 23:24:47.071805857 +0300
@@ -172,7 +172,7 @@

 typedef struct {
 	unsigned int mask;
-	KeySym ksym_or_button;
+	KeyCode keycode;
 	cmd_t cmd;
 	arg_t arg;
 } keymap_t;
