###############################################################################
# make.conf
###############################################################################

MAKE_CONF_MAKEOPTS="-j$(nproc)"

MAKE_CONF_USE="$(curl -s "https://gist.githubusercontent.com/ivanp7/e6200377615d83a0a76a0bfa37b63dc5/raw" |
    sed 's/#.*//; s/\s\+/ /g; s/^\s\+//; s/\s\+$//; /^$/d; s/$/ \\/')"

MAKE_CONF_VIDEO_CARDS='intel nouveau' # other: radeon amdgpu
MAKE_CONF_INPUT_DEVICES='libinput synaptics'

MAKE_CONF_ACCEPT_LICENSE='* -@EULA' # (this is old Gentoo default)

MAKE_CONF_EXTRA="
$(curl -s "https://gist.githubusercontent.com/ivanp7/18e8d22d1439d6e7acbdfa32d7915fb4/raw")
"

MAKE_CONF_GENTOO_MIRRORS="http://gentoo.bloodhost.ru/ ftp://gentoo.bloodhost.ru/ rsync://gentoo.bloodhost.ru/gentoo-distfiles https://mirror.yandex.ru/gentoo-distfiles/ http://mirror.yandex.ru/gentoo-distfiles/ ftp://mirror.yandex.ru/gentoo-distfiles/"

###############################################################################
# timezone & locales & keymap & font
###############################################################################

ETC_TIMEZONE='Europe/Minsk'

ETC_LOCALE_GEN='
en_US.UTF-8 UTF-8
ru_RU.UTF-8 UTF-8
'
ETC_ENV_D_02LOCALE='
LANG="en_US.UTF-8"
LC_COLLATE="C.UTF-8"
'

CONSOLE_KEYMAP="ruwin_alt-UTF-8"
CONSOLE_FONT="ter-u12n" # alternative: ruscii_8x16

###############################################################################
# fstab
###############################################################################

# try to gather information automatically, substitute with /dev/<partition> unless lazy
ROOT_PARTITION=$(df --output=source . | tail -1)
BOOT_PARTITION=$(fdisk -l | sed '/ EFI System$/!d; s/\s.*//' | head -1)

ROOT_PARTITION_UUID=$(blkid | grep "^${ROOT_PARTITION}:" | sed 's/.*\sPARTUUID="//; s/".*//')
BOOT_PARTITION_UUID=$(blkid | grep "^${BOOT_PARTITION}:" | sed 's/.*\sPARTUUID="//; s/".*//')

ETC_FSTAB="
# system root directory
PARTUUID=${ROOT_PARTITION_UUID:?No root PARTUUID specified}   /       ext4    noatime 0 1

# UEFI boot directory
PARTUUID=${BOOT_PARTITION_UUID:?No boot PARTUUID specified}   /boot   vfat    defaults,noatime 0 2

# system tmp directory
tmpfs  /tmp                 tmpfs   nosuid,noatime,nodev 0 0

# portage tmp directory
tmpfs  /var/tmp/portage     tmpfs   uid=portage,gid=portage,mode=775,nosuid,noatime,nodev 0 0
"

###############################################################################
# hostname & hosts
###############################################################################

ETC_HOSTNAME="computer"
ETC_HOSTS="
127.0.0.1   localhost $ETC_HOSTNAME ${ETC_HOSTNAME}.homenetwork ${ETC_HOSTNAME}.localdomain
::1         localhost $ETC_HOSTNAME ${ETC_HOSTNAME}.homenetwork ${ETC_HOSTNAME}.localdomain
"

###############################################################################
# kernel
###############################################################################

INSTALL_INTEL_MICROCODE=true # unset if not using Intel CPU

KERNEL_CONFIG_FILE= # path to Linux kernel configuration file (if unset, `make menuconfig` will be invoked)

###############################################################################
# packages
###############################################################################

PACKAGE_ACCEPT_KEYWORDS_LOCAL="
$(curl -s "https://gist.githubusercontent.com/ivanp7/7c2474f0c9bfa04a85ea951246252827/raw")
"
PACKAGE_USE_LOCAL="
$(curl -s "https://gist.githubusercontent.com/ivanp7/eb2b760da5c3fef757df39bd55199969/raw")
"

INSTALL_PACKAGES="$(curl -s "https://gist.githubusercontent.com/ivanp7/11ef0a661b2d93941bd2f17d11bcf4a7/raw" |
    sed 's/#.*//; s/\s\+/ /g; s/^\s\+//; s/\s\+$//; /^$/d' | tr '\n' ' ')"

ADD_SERVICES="$(curl -s "https://gist.githubusercontent.com/ivanp7/d6be555c32a247d721a989a4f18c4f7b/raw" |
    sed 's/#.*//; s/\s\+/ /g; s/^\s\+//; s/\s\+$//; /^$/d' | tr '\n' ' ')"

###############################################################################
# configuration approval
###############################################################################

CONFIGURATION_IS_APPROVED='no' # set to 'yes' to approve

